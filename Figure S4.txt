
# Note：在不同生境中MGE下属分类的在不同生境的差别
# 这一要注意下选择MGE的筛选条件
# ICE 选择identity>80的数据 (family分类)
# Integron 选择 identity > 70 
# Transposon 选择 identity > 90
# plasmids 选择 identity > 80 
# IS 选择 identity > 90 
# Phage (VOTU)

# library
library(dplyr)
library(data.table)
library(ggplot2)
library(ggpubr)
library(ggsci)
library(patchwork)

load("Plasmids_df_less_1kb.RData")
load("1_ARG_MGE_co_existence_corrected_simplify_byARG_df_3kb_annotation.RData") 

# load
# ICE 
load("2_ICEberg_category_results.RData")

# corrected
tmp <- ICEberg_match_80_df %>% filter(grepl("ERR", sample_name))
tmp$qseqid <- paste(tmp$sample_name, tmp$qseqid, sep = "_")
tmp1 <- ICEberg_match_80_df %>% filter(!(grepl("ERR", sample_name)))
ICEberg_match_80_df <- bind_rows(tmp, tmp1)

ICEberg_match_80_df <- ICEberg_match_80_df %>% filter(!(qseqid %in% Plasmids_df_less_1kb$Contig)) # 过滤掉sewage中小于1Kb的序列

# family_diversity
ICEberg_match_80_family_diversity_df <- ICEberg_match_80_df %>% 
  group_by(ICE_family) %>% 
  summarise(Family_diversity = n())

ICEberg_match_80_family_diversity_df$Total_diversity <- sum(ICEberg_match_80_family_diversity_df$Family_diversity)
ICEberg_match_80_family_diversity_df$percentage <- ICEberg_match_80_family_diversity_df$Family_diversity/ICEberg_match_80_family_diversity_df$Total_diversity
unique(ICEberg_match_80_family_diversity_df$ICE_family)

# ARG carrying 
ICE_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df_3kb %>% 
  filter(MGE_type_final == "ICE")

ICEberg_ARG_match_80_df <- ICEberg_match_80_df %>% filter(qseqid %in% ICE_ARG_df$Contig)
ICEberg_ARG_match_80_df$ARG <- sapply(ICEberg_ARG_match_80_df$qseqid, function(x)
  ICE_ARG_df$ARG[which(ICE_ARG_df$Contig == x)])
ICEberg_ARG_match_80_df$drug_type <- sapply(ICEberg_ARG_match_80_df$qseqid, function(x)
  ICE_ARG_df$drug_type[which(ICE_ARG_df$Contig == x)])

#
ICEberg_match_80_df$Existed_ARG <-
  sapply(ICEberg_match_80_df$qseqid,
         function(x){
           if(x %in% ICEberg_ARG_match_80_df$qseqid){
             "Yes"
           }else{
             "No"
           }
         })


# family_diversity
ICEberg_ARG_match_80_family_diversity_df <- ICEberg_ARG_match_80_df %>% 
  group_by(ICE_family) %>% 
  summarise(Family_diversity = n())

ICEberg_ARG_match_80_family_diversity_df$Total_diversity <- sum(ICEberg_ARG_match_80_family_diversity_df$Family_diversity)
ICEberg_ARG_match_80_family_diversity_df$percentage <- ICEberg_ARG_match_80_family_diversity_df$Family_diversity/ICEberg_ARG_match_80_family_diversity_df$Total_diversity
unique(ICEberg_ARG_match_80_family_diversity_df$ICE_family)

# plot -------------------------------

# 
ICEberg_match_80_family_diversity_df$MGE <- rep("Identity_ICE")
ICEberg_ARG_match_80_family_diversity_df$MGE <- rep("Identity_ARG_carrying_ICE")

ICE_ARG_diversity <- bind_rows(ICEberg_match_80_family_diversity_df, ICEberg_ARG_match_80_family_diversity_df)

ICE_ARG_diversity$MGE <- factor(ICE_ARG_diversity$MGE, levels = c("Identity_ICE","Identity_ARG_carrying_ICE"))

ICE_family_bar <- ggplot(ICE_ARG_diversity, aes(x = MGE, y = percentage, fill=ICE_family))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c( "#d4d6c8","#2e7d32", "#7a9eaf", "#daebee","#ffedb2","#ffbf87")) +
                                          theme(axis.text.x = element_text(hjust = 0.5, vjust = 0.5)) + 
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.03), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of ICE") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

ICE_family_bar


# Integron ----------------------------

load("2_Integrall_category_results.RData")
# corrected
tmp <- integrall_match_70_df %>% filter(grepl("ERR", sample_name))
tmp$qseqid <- paste(tmp$sample_name, tmp$qseqid, sep = "_")
tmp1 <- integrall_match_70_df %>% filter(!(grepl("ERR", sample_name)))
integrall_match_70_df <- bind_rows(tmp, tmp1)

integrall_match_70_df <- integrall_match_70_df %>% filter(!(qseqid %in% Plasmids_df_less_1kb$Contig)) # 过滤掉sewage中小于1Kb的序列

integrall_match_70_diversity_df <- integrall_match_70_df %>% 
  group_by(Integron_category) %>% 
  summarise(Family_diversity = n())

integrall_match_70_diversity_df$Total_diversity <- sum(integrall_match_70_diversity_df$Family_diversity)
integrall_match_70_diversity_df$percentage <- integrall_match_70_diversity_df$Family_diversity/integrall_match_70_diversity_df$Total_diversity

# ARG carrying 
Integron_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df_3kb %>% 
  filter(MGE_type_final == "Integron")

Integron_ARG_match_70_df <- integrall_match_70_df %>% filter(qseqid %in% Integron_ARG_df$Contig)

Integron_ARG_match_70_df$ARG <- sapply(Integron_ARG_match_70_df$qseqid, function(x)
  Integron_ARG_df$ARG[which(Integron_ARG_df$Contig == x)])
Integron_ARG_match_70_df$drug_type <- sapply(Integron_ARG_match_70_df$qseqid, function(x)
  Integron_ARG_df$drug_type[which(Integron_ARG_df$Contig == x)])

integrall_match_70_df$Existed_ARG <-
  sapply(integrall_match_70_df$qseqid,
         function(x){
           if(x %in% Integron_ARG_match_70_df$qseqid){
             "Yes"
           }else{
             "No"
           }
         })

write.csv(integrall_match_70_df, file = "F:/5_MGE_details_information/2_DifferentMGE_detailType/tmp/integrall_match_70.csv")

# diversity
Integron_ARG_match_70_diversity_df <- Integron_ARG_match_70_df %>% 
  group_by(Integron_category) %>% 
  summarise(category_diversity = n())

Integron_ARG_match_70_diversity_df$Total_diversity <- sum(Integron_ARG_match_70_diversity_df$category_diversity)
Integron_ARG_match_70_diversity_df$percentage <- Integron_ARG_match_70_diversity_df$category_diversity/Integron_ARG_match_70_diversity_df$Total_diversity
unique(Integron_ARG_match_70_diversity_df$Integron_category)

# plot
integrall_match_70_diversity_df$MGE <- rep("Identity_Integron")
colnames(integrall_match_70_diversity_df)[which(colnames(integrall_match_70_diversity_df) == "Family_diversity")] <- "category_diversity"

Integron_ARG_match_70_diversity_df$MGE <- rep("Identity_ARG_carrying_Integron")

Integron_diversity <- bind_rows(integrall_match_70_diversity_df, Integron_ARG_match_70_diversity_df)

Integron_diversity$MGE <- factor(Integron_diversity$MGE, levels = c("Identity_Integron","Identity_ARG_carrying_Integron"))

Integron_bar <- ggplot(Integron_diversity, aes(x = MGE, y = percentage, fill=Integron_category))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#0b8e36", "#D9F0D3","#a5d6a7", "#dce775","#fff59d", "#FFDD71","#fff8e1","#DFC27D", 
                                        "#ffe0b2", "#e65100", "#ff9100", "#7986cb","#D1E5F0","#0277bd", "#00acc1","gray")) +
                                          theme(axis.text.x = element_text(hjust = 0.5, vjust = 0.5)) + 
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.03), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of Integron") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

Integron_bar

# IS --------------------------------------------------------------------------
load("IS_byMobileElementFinder_df.Rdata")

#
IS_information <- fread("ISfinder_information.csv")
IS_information_simplify <- IS_information %>% select(Name, Family) %>% unique()

unique(IS_byMobileElementFinder_df$type)

IS_df_90 <- IS_byMobileElementFinder_df %>% dplyr::filter(identity > 0.9) 
IS_df_90 <- IS_df_90 %>% filter(!(contig %in% Plasmids_df_less_1kb$Contig)) 

IS_df_90$Family <- sapply(IS_df_90$name, function(x)
  IS_information_simplify$Family[which(IS_information_simplify$Name == x)])
IS_df_90$Family <- as.character(IS_df_90$Family)
IS_df_90$Family[which(IS_df_90$Family == "character(0)")] <- "Unclassified"

# family
IS_df_90_family_diversity_df <- IS_df_90 %>% 
  group_by(Family) %>% 
  summarise(category_diversity = n())

IS_df_90_family_diversity_df$Total_diversity <- sum(IS_df_90_family_diversity_df$category_diversity)
IS_df_90_family_diversity_df$percentage <- IS_df_90_family_diversity_df$category_diversity/IS_df_90_family_diversity_df$Total_diversity

# ARG carrying ---------------
IS_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df_3kb %>% 
  dplyr::filter(MGE_type_final == "IS")

IS_ARG_df_90 <- IS_df_90 %>% dplyr::filter(contig %in% IS_ARG_df$Contig)

IS_ARG_df_90$ARG <- sapply(IS_ARG_df_90$contig, function(x)
  IS_ARG_df$ARG[which(IS_ARG_df$Contig == x)])

IS_ARG_df_90$drug_type <- sapply(IS_ARG_df_90$contig, function(x)
  IS_ARG_df$drug_type[which(IS_ARG_df$Contig == x)])

IS_df_90$Existed_ARG <-
  sapply(IS_df_90$contig,
         function(x){
           if(x %in% IS_ARG_df_90$contig){
             "Yes"
           }else{
             "No"
           }
         })

write.csv(IS_df_90, file = "F:/5_MGE_details_information/2_DifferentMGE_detailType/tmp/IS_df_90.csv")

# family
IS_ARG_df_90_family_diversity_df <- IS_ARG_df_90 %>% 
  group_by(Family) %>% 
  summarise(category_diversity = n())

IS_ARG_df_90_family_diversity_df$Total_diversity <- sum(IS_ARG_df_90_family_diversity_df$category_diversity)
IS_ARG_df_90_family_diversity_df$percentage <- IS_ARG_df_90_family_diversity_df$category_diversity/IS_ARG_df_90_family_diversity_df$Total_diversity
unique(IS_ARG_df_90_family_diversity_df$Family)

# plot
# 堆积图看具体分类
# category_family -------

IS_df_90_family_diversity_df$MGE <- rep("Identity_IS")
IS_ARG_df_90_family_diversity_df$MGE <- rep("Identity_ARG_carrying_IS")

#
IS_family_diversity <- bind_rows(IS_df_90_family_diversity_df, IS_ARG_df_90_family_diversity_df)

IS_family_diversity$MGE <- factor(IS_family_diversity$MGE, levels = c("Identity_IS","Identity_ARG_carrying_IS"))


IS_family_bar <- ggplot(IS_family_diversity, aes(x = MGE, y = percentage, fill=Family))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#7FC97F", "#BEAED4", "#FDC086", "#ffff8d", "#386CB0", "#c0ca33" ,"#BF5B17", "#666666", "#1B9E77" , "#00b8d4",
                                        "#7570B3", "#E7298A", "#66A61E", "#E6AB02","#FFF2AE" ,"#cfd8dc", "#A6CEE3", "#1F78B4" ,  "#B2DF8A", "#33A02C",
                                        "#FB9A99" ,"#E31A1C" ,"#FDBF6F", "#FF7F00", "#CAB2D6" ,"#6A3D9A", "#fdd835" , "#fb8c00", "gray")) +
  #scale_fill_manual(values = c(pal, "gray")) +
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.03), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of IS") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

IS_family_bar

# phage ########################################################################
load("2_All_Phage_mapping.RData")
load("VOTU_vcontact2_information.Rdata")

# family
phage_taxonomy_combined_diversity_df <- phage_taxonomy_combined_df %>% 
  group_by(Family) %>% 
  summarise(category_diversity = n())

phage_taxonomy_combined_diversity_df$Total_diversity <- sum(phage_taxonomy_combined_diversity_df$category_diversity)
phage_taxonomy_combined_diversity_df$percentage <- phage_taxonomy_combined_diversity_df$category_diversity/phage_taxonomy_combined_diversity_df$Total_diversity

# ARG carrying 
Phage_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df_3kb %>% 
  filter(MGE_type_final == "Phage")

phage_taxonomy_combined_df_ARG <- phage_taxonomy_combined_df %>% filter(Contig %in% Phage_ARG_df$Contig)

phage_taxonomy_combined_df_ARG$ARG <- sapply(phage_taxonomy_combined_df_ARG$Contig, function(x)
  Phage_ARG_df$ARG[which(Phage_ARG_df$Contig == x)])

phage_taxonomy_combined_df_ARG$drug_type <- sapply(phage_taxonomy_combined_df_ARG$Contig, function(x)
  Phage_ARG_df$drug_type[which(Phage_ARG_df$Contig == x)])

#
phage_taxonomy_combined_df$Existed_ARG <-
  sapply(phage_taxonomy_combined_df$Contig,
         function(x){
           if(x %in% phage_taxonomy_combined_df_ARG$Contig){
             "Yes"
           }else{
             "No"
           }
         })

write.csv(phage_taxonomy_combined_df, file = "F:/5_MGE_details_information/2_DifferentMGE_detailType/tmp/phage_taxonomy_combined.csv")

# family
phage_taxonomy_combined_ARG_diversity_df <- phage_taxonomy_combined_df_ARG %>% 
  group_by(Family) %>% 
  summarise(category_diversity = n())

phage_taxonomy_combined_ARG_diversity_df$Total_diversity <- sum(phage_taxonomy_combined_ARG_diversity_df$category_diversity)
phage_taxonomy_combined_ARG_diversity_df$percentage <- phage_taxonomy_combined_ARG_diversity_df$category_diversity/phage_taxonomy_combined_ARG_diversity_df$Total_diversity
unique(phage_taxonomy_combined_ARG_diversity_df$Family)

# plot
# composition
phage_taxonomy_combined_diversity_df$MGE <- rep("Identity_Phage")
phage_taxonomy_combined_ARG_diversity_df$MGE <- rep("Identity_ARG_carrying_Phage")
Phage_diversity <- bind_rows(phage_taxonomy_combined_diversity_df, phage_taxonomy_combined_ARG_diversity_df)

Phage_diversity$MGE <- factor(Phage_diversity$MGE, levels = c("Identity_Phage","Identity_ARG_carrying_Phage"))

Phage_family_bar <- ggplot(Phage_diversity, aes(x = MGE, y = percentage, fill=Family))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#d4d6c8","#2e7d32", "#7a9eaf", "#daebee","#ffedb2","#ffbf87" )) + 
                                          
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.03), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of Phage") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

Phage_family_bar

# plasmids  --------------------------------------------------------------------
load("2_plsdb_category_results.RData")

plasdb_match_80_df <- plasdb_match_df %>% dplyr::filter(pident > 80) 

# corrected
tmp <- plasdb_match_80_df %>% dplyr::filter(grepl("ERR", sample_name))
tmp$qseqid <- paste(tmp$sample_name, tmp$qseqid, sep = "_")
tmp1 <- plasdb_match_80_df %>% dplyr::filter(!(grepl("ERR", sample_name)))
plasdb_match_80_df <- bind_rows(tmp, tmp1)

plasdb_match_80_df <- plasdb_match_80_df %>% filter(!(qseqid %in% Plasmids_df_less_1kb$Contig)) # 过滤掉sewage中小于1Kb的序列

# diversity 
plasdb_match_80_diversity_df <- plasdb_match_80_df %>% 
  group_by(plasmid_category) %>% 
  summarise(category_diversity = n())

plasdb_match_80_diversity_df$Total_diversity <- sum(plasdb_match_80_diversity_df$category_diversity)
plasdb_match_80_diversity_df$percentage <- plasdb_match_80_diversity_df$category_diversity/plasdb_match_80_diversity_df$Total_diversity

# ARG carrying 
Plasmids_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df_3kb %>% 
  filter(MGE_type_final == "Plasmids")

plasdb_ARG_match_80_df <- plasdb_match_80_df %>% filter(qseqid %in% Plasmids_ARG_df$Contig) # 2163

#
plasdb_match_80_df$Existed_ARG <-
  sapply(plasdb_match_80_df$qseqid,
         function(x){
           if(x %in% plasdb_ARG_match_80_df$qseqid){
             "Yes"
           }else{
             "No"
           }
         })

write.csv(plasdb_match_80_df, file = "F:/5_MGE_details_information/2_DifferentMGE_detailType/tmp/plasdb_match_80.csv")

# diversity
plasdb_ARG_match_80_diversity_df <- plasdb_ARG_match_80_df %>% 
  group_by(plasmid_category) %>% 
  summarise(category_diversity = n())

plasdb_ARG_match_80_diversity_df$Total_diversity <- sum(plasdb_ARG_match_80_diversity_df$category_diversity)
plasdb_ARG_match_80_diversity_df$percentage <- plasdb_ARG_match_80_diversity_df$category_diversity/plasdb_ARG_match_80_diversity_df$Total_diversity
unique(plasdb_ARG_match_80_diversity_df$plasmid_category)

# plot
# 堆积图看具体分类
# family_diversity ---------
plasdb_match_80_diversity_df$MGE <- rep("Identity_Plasmids")

top50 <- arrange(plasdb_match_80_diversity_df, desc(percentage))[51:213,]

plasdb_match_80_diversity_df$plasmid_category[plasdb_match_80_diversity_df$plasmid_category %in% top50$plasmid_category] <- "Others"
plasdb_match_80_diversity_df <- plasdb_match_80_diversity_df %>% group_by(plasmid_category) %>%  
  summarise(percentage=sum(percentage), MGE= unique(MGE))

# 
plasdb_ARG_match_80_diversity_df$MGE <- rep("Identity_ARG_carrying_Plasmid")
# 
top25 <- arrange(plasdb_ARG_match_80_diversity_df, desc(percentage))[26:64,]

plasdb_ARG_match_80_diversity_df$plasmid_category[plasdb_ARG_match_80_diversity_df$plasmid_category %in% top25$plasmid_category] <- "Others"
plasdb_ARG_match_80_diversity_df <- plasdb_ARG_match_80_diversity_df %>% group_by(plasmid_category) %>%  
  summarise(percentage=sum(percentage), MGE= unique(MGE))

#
Plasmids_diversity <- bind_rows(plasdb_match_80_diversity_df, plasdb_ARG_match_80_diversity_df)

#############
Plasmids_diversity$MGE <- factor(Plasmids_diversity$MGE, levels = c("Identity_Plasmids","Identity_ARG_carrying_Plasmid"))
ranking <- c(unique(Plasmids_diversity$plasmid_category)[unique(Plasmids_diversity$plasmid_category) != "Others" | unique(Plasmids_diversity$plasmid_category) != "Unclassified"], "Others", "Unclassified") 
Plasmids_diversity$plasmid_category <- factor(Plasmids_diversity$plasmid_category, levels = ranking)

Plasmids_family_bar_1 <- ggplot(Plasmids_diversity, aes(x = MGE, y = percentage, fill=plasmid_category))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#7FC97F", "#BEAED4", "#FDC086", "#ffff8d", "#386CB0", "#c0ca33" ,"#BF5B17", "#666666", "#1B9E77" , "#00b8d4",
                                        "#7570B3", "#E7298A", "#66A61E", "#E6AB02","#efebe9" ,"#cfd8dc", "#A6CEE3", "#1F78B4" ,  "#B2DF8A", "#33A02C",
                                        "#FB9A99" ,"#E31A1C" ,"#FDBF6F", "#FF7F00", "#CAB2D6" , "#fdd835" ,"#6A3D9A", "#fb8c00", "#f06292", "#B3CDE3",
                           -             "#CCEBC5", "#DECBE4" ,"#FED9A6" ,"#FFFFCC", "#E5D8BD", "#FDDAEC" , "#CCCCCC", "#B3E2CD", "gray" ,"#ba68c8" ,
                                        "#F4CAE4", "#E6F5C9" ,"#FFF2AE", "#F1E2CC"  , "#ef9a9a" ,"#377EB8", "#4DAF4A",  "#ffecb3", "#b9f6ca",
                                        "#00838f", "#006064", "#80d8ff", "#9e9d24",
                                        "#FDCDAC","#66242788","#F2F2F2")) + 
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.003), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  coord_cartesian(ylim = c(0, 0.82)) +
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

Plasmids_family_bar_1

Plasmids_family_bar_2 <- ggplot(Plasmids_diversity, aes(x = MGE, y = percentage, fill=plasmid_category))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#7FC97F", "#BEAED4", "#FDC086", "#ffff8d", "#386CB0", "#c0ca33" ,"#BF5B17", "#666666", "#1B9E77" , "#00b8d4",
                                        "#7570B3", "#E7298A", "#66A61E", "#E6AB02","#efebe9" ,"#cfd8dc", "#A6CEE3", "#1F78B4" ,  "#B2DF8A", "#33A02C",
                                        "#FB9A99" ,"#E31A1C" ,"#FDBF6F", "#FF7F00", "#CAB2D6" , "#fdd835" ,"#6A3D9A", "#fb8c00", "#f06292", "#B3CDE3",
                                        "#CCEBC5", "#DECBE4" ,"#FED9A6" ,"#FFFFCC", "#E5D8BD", "#FDDAEC" , "#CCCCCC", "#B3E2CD", "gray" ,"#ba68c8" ,
                                        "#F4CAE4", "#E6F5C9" ,"#FFF2AE", "#F1E2CC"  , "#ef9a9a" ,"#377EB8", "#4DAF4A",  "#ffecb3", "#b9f6ca",
                                        "#00838f", "#006064", "#80d8ff", "#9e9d24",
                                        "#FDCDAC","#66242788","#F2F2F2")) + 
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.003), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of Plasmid") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  coord_cartesian(ylim = c(0.85, 1)) +
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

Plasmids_family_bar_2

Plasmids_family_bar <- ggarrange(Plasmids_family_bar_2,Plasmids_family_bar_1,heights=c(6/8, 2/8),ncol = 1, nrow = 2,common.legend = TRUE,legend="right",align = "v") 

Plasmids_family_bar
# 以高 5 宽 10.5 导出， 1_plasmids_family

# Transposon ###################################################################

load("2_TransposonDB_category_results.RData")

TransposonDB_match_90_df <- TransposonDB_match_df %>% filter(pident > 90) # 7630 

# corrected
tmp <- TransposonDB_match_90_df %>% filter(grepl("ERR", sample_name))
tmp$qseqid <- paste(tmp$sample_name, tmp$qseqid, sep = "_")
tmp1 <- TransposonDB_match_90_df %>% filter(!(grepl("ERR", sample_name)))
TransposonDB_match_90_df <- bind_rows(tmp, tmp1) # 7630

# 再一次校正transposon
load("3_Statistics_FinalAnnotations.RData")
Transposon <- Tn_IS_information_df %>% filter(all >= 1) 
IS <- Tn_IS_information_df %>% filter(all == 0) 
TransposonDB_match_90_df <- TransposonDB_match_90_df %>% filter(qseqid %in% Transposon$SeqName) # 344

# family_diversity
TransposonDB_match_90_diversity_df <- TransposonDB_match_90_df %>% 
  group_by(TransposonDB_family) %>% 
  summarise(category_diversity = n())

TransposonDB_match_90_diversity_df$Total_diversity <- sum(TransposonDB_match_90_diversity_df$category_diversity)
TransposonDB_match_90_diversity_df$percentage <- TransposonDB_match_90_diversity_df$category_diversity/TransposonDB_match_90_diversity_df$Total_diversity

# ARG carrying 
# 加载所有ARG carrying MGE的数据
# load("I:/Global_ARG/Analysis_corrected_before/17.Analysis/3_ARG_MGE_co_existence_corrected_df_byARG.Rdata") 

Transposon_ARG_df <- ARG_MGE_co_existence_corrected_yes_simplify_byARG_df %>% 
  filter(MGE_type_final == "Transposon")

TransposonDB_ARG_match_90_df <- TransposonDB_match_90_df %>% filter(qseqid %in% Transposon_ARG_df$Contig)

TransposonDB_match_90_df$Existed_ARG <-
  sapply(TransposonDB_match_90_df$qseqid,
         function(x){
           if(x %in% TransposonDB_ARG_match_90_df$qseqid){
             "Yes"
           }else{
             "No"
           }
         })

# diversity
TransposonDB_ARG_match_90_diversity_df <- TransposonDB_ARG_match_90_df %>% 
  group_by(TransposonDB_family) %>% 
  summarise(category_diversity = n())

TransposonDB_ARG_match_90_diversity_df$Total_diversity <- sum(TransposonDB_ARG_match_90_diversity_df$category_diversity)
TransposonDB_ARG_match_90_diversity_df$percentage <- TransposonDB_ARG_match_90_diversity_df$category_diversity/TransposonDB_ARG_match_90_diversity_df$Total_diversity

# plot
# 堆积图看具体分类
# category_diversity
TransposonDB_match_90_diversity_df$MGE <- rep("Identity_Transposon")

TransposonDB_ARG_match_90_diversity_df$MGE <- rep("Identity_ARG_carrying_Transposon")

Transposon_diversity <- bind_rows(TransposonDB_match_90_diversity_df, TransposonDB_ARG_match_90_diversity_df)

Transposon_diversity$MGE <- factor(Transposon_diversity$MGE, levels = c("Identity_Transposon","Identity_ARG_carrying_Transposon"))

Transposon_bar <- ggplot(Transposon_diversity, aes(x = MGE, y = percentage, fill=TransposonDB_family))  + geom_col(width = 0.6) +  
  scale_fill_manual(values = c("#0b8e36", "#D9F0D3","#a5d6a7", "#dce775","#ff9100","#fff59d", "#FFDD71", 
                                        "#ffe0b2", "#e65100",  "#7986cb","#D1E5F0","#0277bd", "#00acc1","gray")) +
                                          theme(axis.text.x = element_text(hjust = 0.5, vjust = 0.5)) + 
  theme_test(base_size = 12) +
  scale_y_continuous(expand = c(0.0001, 0.03), limits = c(0,1)) +
  scale_x_discrete(expand = c(0.1, 0.4)) + 
  xlab("") + ylab("Composition of Transposon") + #+ guides(fill = guide_legend(nrow=2)) 
  theme(legend.position="right") + 
  theme(axis.ticks = element_line(colour = "black"), axis.text = element_text(colour = "black")) 

Transposon_bar

# 以高 4 宽 6.2 导出， 1_Transposon_family

library(patchwork)

# diversity
layout <- "
ABC
DEF
"

p_rich_div_Plasmid + p_rich_div_phage + p_rich_div_ICE + p_rich_div_IS + p_rich_div_Transposon +p_rich_div_Integron + plot_layout(design = layout)

