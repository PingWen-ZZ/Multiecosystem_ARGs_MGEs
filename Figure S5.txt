
# load
library(dplyr)
library(ggplot2)
library(ggpubr)

# (1) ICE ####
load("2_All_ICE_mapping_ICEberg_identity.RData")

# abundance 
rich_fun  <- All_ICEType_df_ICEberg_select_80identity %>% 
  filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

rich_fun <- rich_fun %>% filter(DepthPG < 6)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland", "grass"))

p_rich_abundance_ICE <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG))+
  
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) +
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" ,"#2c7fb8")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) +
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "ICE abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Grassland")) 

p_rich_abundance_ICE


# (2) Integron 

load("2_All_Integron_mapping_integrall_identity.RData")

# abundance 
rich_fun  <- All_IntegronType_df_Integrall_select_70identity %>% 
  filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

rich_fun <- rich_fun %>% filter(DepthPG < 150)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland","forest", "grass", "gobi"))

p_rich_abundance_Integron <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG))+
  
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) +
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" , "#7fcdbb","#2c7fb8","#bdbdbd")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) +
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "Integron abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Forest", "Grassland", "Gobi desert"))

p_rich_abundance_Integron

compare_means(DepthPG ~ sampleType,  data = rich_fun, method = "wilcox.test")

# (3) IS 

load("1_IS_mapping_byname.Rdata")

# abundance 
rich_fun  <- All_IS_select %>% 
  filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

rich_fun <- rich_fun %>% filter(DepthPG < 4000)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland","forest", "grass", "gobi"))

p_rich_abundance_IS <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG))+
  
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) +
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" , "#7fcdbb","#2c7fb8","#bdbdbd")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) +
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "IS abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Forest", "Grassland", "Gobi desert"))

p_rich_abundance_IS

# (4) phage
load("2_All_Phage_mapping.RData")
load("VOTU_vcontact2_information.Rdata")

# corrected
All_Phage_select <- All_Phage_select %>% filter(Contig %in% phage_taxonomy_combined_df$Contig)

# abundance 
rich_fun  <- All_Phage_select %>% 
  filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

rich_fun <- rich_fun %>% filter(DepthPG < 15)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland","forest", "grass", "gobi"))

p_rich_abundance_Phage <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG))+
  
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) + 
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" , "#7fcdbb","#2c7fb8","#bdbdbd")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) +
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "Phage abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Forest", "Grassland", "Gobi desert"))

p_rich_abundance_Phage

# £¨5£©Transposon 

load("2_All_Transposon_mapping_TransposonDB_select_identity.RData")

load("3_Statistics_FinalAnnotations.RData")

Transposon <- Tn_IS_information_df %>% filter(all >= 1) 
IS <- Tn_IS_information_df %>% filter(all == 0) 
All_TransposonType_df_TransposonDB_select_90identity <- All_TransposonType_df_TransposonDB_select_90identity %>% 
  filter(Contig %in% Transposon$SeqName) # 

# abundance 
rich_fun  <- All_TransposonType_df_TransposonDB_select_90identity %>% 
  dplyr::filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

rich_fun <- rich_fun %>% dplyr::filter(DepthPG < 25)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland","forest", "grass", "gobi"))

p_rich_abundance_Transposon <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG)) + 
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) +
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" , "#7fcdbb","#2c7fb8","#bdbdbd")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) +
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "Transposon abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Forest", "Grassland", "Gobi desert"))

p_rich_abundance_Transposon

# £¨6£©plasmids 

load("2_All_plasmidstype_df_plsdb_select.RData")

# abundance 
rich_fun  <- All_plasmidstype_df_plsdb_select_80identity %>% 
  filter(DepthPG != 0) %>%
  group_by(sampleName) %>% 
  summarise(DepthPG = sum(DepthPG), Diversity = n(), sampleType = unique(sampleType))

load("E:/4.Global_ARG_with_MGE_analysis/8.plasmids_phage_information/plasdb_database/2_plsdb_category_results_diversity.Rdata")

rich_fun <- rich_fun %>% filter(DepthPG < 10000)

rich_fun$sampleType <- factor(rich_fun$sampleType, levels = c("tailings", "Sludge", "farmland","forest", "grass", "gobi"))

p_rich_abundance_Plasmid <- rich_fun %>% 
  ggplot(aes(x=sampleType, y=DepthPG))+
  
  stat_summary(fun.data = mean_se,geom="errorbar",width=0.2 )+
  stat_summary(mapping=aes(fill =sampleType),fun=mean,geom = "bar",fun.args = list(mult=1)) +
  scale_fill_manual(values = c('#EA5C15','#7986cb',"#addd8e" , "#7fcdbb","#2c7fb8","#bdbdbd")) +
  geom_jitter(width = 0.25, color="#bcaaa4", size = 3.2, shape = 19, alpha = 0.5) + 
  theme_pubr(border = T, legend = "none", base_size = 13)+ #ylim(c(0,850))+
  theme(panel.background = element_rect(fill = "#fbfbfa"))+ylab(label = "Plasmid abundance (DepthPG /Gb)") + 
  stat_compare_means()+ theme(axis.text.x = element_text(vjust = 0.75,angle = 30)) +
  scale_x_discrete(labels=c("Tailings", "Sewage","Farmland", "Forest", "Grassland", "Gobi desert"))

p_rich_abundance_Plasmid



